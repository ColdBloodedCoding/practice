class Solution {
public List<Integer> findDisappearedNumbers(int[] nums) {
        List<Integer> list = new ArrayList<>();
        for (int i = 0; i < nums.length; i++) {
            // nums[n - 1] = n;  //can not do this, since you will override the origin node.
            int idx = Math.abs(nums[i]) - 1;
            if (nums[idx] > 0) nums[idx] = - nums[idx];
        }
        for (int i = 0; i < nums.length; i++) {
            if (nums[i] > 0) list.add(i + 1);
        }
        return list;
    }
}






/*Input: nums = [4,3,2,7,8,2,3,1]
Output: [5,6]

[-4, -3, -2, -7, 8, 2, -3, -1]

i=0. nums[i]=4  abs=4
   index=4-1=3    x=-7
    
i=1. nums[1]=3.  abs=3
     index=2.  x=-2
    
i=2 nums[2]=2.   abs=2
    index=1.    x=-3
    
i=3. nums[3]=7.    abs=7
    index=6.  x=-2
    
i=4.   nums[4]=8.   abs=8
    index=7.       x=-1
    
i=5.   nums[5]=2.   abs=2
     index=1.       x=-3
    
i=6. nums[6]=3.  abs=3
    index=2.      x=-2
    
i=7.  nums[7]=1.  abs=1
    index=0.  x=-4
    
    
    */
